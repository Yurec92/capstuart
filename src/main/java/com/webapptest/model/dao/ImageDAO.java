package com.webapptest.model.dao;import java.sql.Connection;import java.sql.PreparedStatement;import java.sql.ResultSet;import java.sql.SQLException;import javax.sql.DataSource;import org.springframework.jdbc.core.RowMapper;import org.springframework.jdbc.core.JdbcTemplate;import java.util.List;import java.util.ArrayList;import com.webapptest.model.entity.Image;import org.springframework.jdbc.core.support.JdbcDaoSupport;import java.util.Map;import com.webapptest.model.entity.Image;import org.springframework.dao.EmptyResultDataAccessException;import org.springframework.jdbc.core.BeanPropertyRowMapper;public class ImageDAO{	private JdbcTemplate jdbcTemplate;	public void setDataSource(DataSource dataSource) 	{		jdbcTemplate = new JdbcTemplate(dataSource);	}	public List<Image> findAll()	{ 		String sql = "SELECT * FROM IMAGES";		List<Image> images = new ArrayList<Image>();		List<Map<String,Object>> rows = jdbcTemplate.queryForList(sql);		for (Map row : rows) 		{			Image image = new Image();			image.setId((Integer)(row.get("id")));			image.setName((String)row.get("name"));			image.setPathToFile((String)row.get("pathToFile"));			image.setIdOfGroup((Integer)(row.get("idOfGroup")));			image.setIdOfSection((Integer)(row.get("idOfSection")));			images.add(image);		} 		return images;	}	public List<Image> findByIdOfGroup(int idOfGroup)	{ 		String sql = "SELECT * FROM IMAGES WHERE IDOFGROUP=?";		List<Image> images = new ArrayList<Image>();		List<Map<String,Object>> rows = jdbcTemplate.queryForList(sql,new Object[]{idOfGroup});		for (Map row : rows) 		{			Image image = new Image();			image.setId((Integer)(row.get("id")));			image.setName((String)row.get("name"));			image.setPathToFile((String)row.get("pathToFile"));			image.setIdOfGroup((Integer)(row.get("idOfGroup")));			image.setIdOfSection((Integer)(row.get("idOfSection")));			images.add(image);		} 		return images;	}	public List<Image> findByIdOfSection(int idOfSection)	{ 		String sql = "SELECT * FROM IMAGES WHERE IDOFSECTION=?";		List<Image> images = new ArrayList<Image>();		List<Map<String,Object>> rows = jdbcTemplate.queryForList(sql,new Object[]{idOfSection});		for (Map row : rows) 		{			Image image = new Image();			image.setId((Integer)(row.get("id")));			image.setName((String)row.get("name"));			image.setPathToFile((String)row.get("pathToFile"));			image.setIdOfGroup((Integer)(row.get("idOfGroup")));			image.setIdOfSection((Integer)(row.get("idOfSection")));			images.add(image);		} 		return images;	}	public void addImage(String name,String pathToFile,int idOfGroup,int idOfSection)	{		String sql="INSERT INTO IMAGES(`NAME`,`PATHTOFILE`,`IDOFGROUP`,`IDOFSECTION`) VALUES(?,?,?,?)";		jdbcTemplate.update(sql,new Object[]{name,pathToFile,new Integer(idOfGroup),new Integer(idOfSection)});			}	public Image findByName(String name)	{			String sql = "SELECT * FROM IMAGES WHERE NAME=?";		try{			return (Image)jdbcTemplate.queryForObject(sql,new Object[]{name},new BeanPropertyRowMapper(Image.class));		}		catch (EmptyResultDataAccessException e)		{			return null;		}	}	public List<Image> findByNameOfGroup(String name)	{ 		String sql = "SELECT * FROM IMAGES WHERE IDOFGROUP=(SELECT ID FROM GROUPS WHERE NAME=?)";		try{List<Image> images = new ArrayList<Image>();		List<Map<String,Object>> rows = jdbcTemplate.queryForList(sql,new Object[]{name});		for (Map row : rows) 		{			Image image = new Image();			image.setId((Integer)(row.get("id")));			image.setName((String)row.get("name"));			image.setPathToFile((String)row.get("pathToFile"));			image.setIdOfGroup((Integer)(row.get("idOfGroup")));			image.setIdOfSection((Integer)(row.get("idOfSection")));			images.add(image);		} 		return images;		}		catch(NullPointerException e)		{			return null;		}	}	public List<Image> findByNameOfSection(String name)	{ 		String sql = "SELECT * FROM IMAGES WHERE IDOFSECTION=(SELECT ID FROM SECTIONS WHERE NAME=?)";		List<Image> images = new ArrayList<Image>();		List<Map<String,Object>> rows = jdbcTemplate.queryForList(sql,new Object[]{name});		for (Map row : rows) 		{			Image image = new Image();			image.setId((Integer)(row.get("id")));			image.setName((String)row.get("name"));			image.setPathToFile((String)row.get("pathToFile"));			image.setIdOfGroup((Integer)(row.get("idOfGroup")));			image.setIdOfSection((Integer)(row.get("idOfSection")));			images.add(image);		} 		return images;	}	public void delete(String name)	{		String sql="DELETE FROM IMAGES WHERE NAME=?";		jdbcTemplate.update(sql,new Object[]{name});			}		public void updateGroup(Image image)	{		String sql="UPDATE `images` SET `IDOFGROUP`=(select id from groups where `name`='withoutgroup') WHERE ID=?";		jdbcTemplate.update(sql,new Object[]{image.getId()});		}			}